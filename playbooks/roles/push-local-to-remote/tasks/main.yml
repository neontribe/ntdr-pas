---
# Local actions
#- name: Fix local permissions
  # TODO Make this a module
  #shell: sudo ntdrchown -a {{ source }}
  #delegate_to: 127.0.0.1

- ntdr_slacken_local_permissions.py: path={{ source  }}
  register: slacken_permission_output
  delegate_to: 127.0.0.1  

- debug: var=slacken_permission_output.stat.status

- stat: path={{ target }}
  register: target_dir

- name: Get source version
  ntdr_get_version.py: path={{ source }}
  register: source_version

- name: Get remote version
  ntdr_get_version.py: path={{ target }} exists={{ target_dir.stat.exists }}
  register: target_version

- name: Check for remote files
  stat: path={{ target }}/sites/default/files
  register: target_files

- name: Sync down files
  synchronize: src="{{ target }}/sites/default/files" dest="{{ source }}/sites/default" mode=pull checksum=yes times=no
  when: target_files.stat.exists

- name: Ensure sites/all/drush
  file: path={{ source }}/sites/all/drush state=directory mode=0755
  delegate_to: 127.0.0.1

- ntdr_create_change_log.py: path={{ source }} version={{ target_version.stat.version }}
  register: change_log_output
  delegate_to: 127.0.0.1

- debug: var=change_log_output.stat.path

- name: Fix remote permissions
  shell: sudo ntdrchown -a {{ target }}
  when: target_files.stat.exists

- debug:
    msg: "drush -y dl --destination={{ target | dirname }} --drupal-project-rename={{ target | basename }}"

# Remote actions
- name: Prep drupal
  shell: "drush -y dl --destination={{ target| dirname }} --drupal-project-rename={{ target | basename }}"
  when: not target_files.stat.exists
  # when: not target_dir.stat.exists

- name: Full fs sync
  synchronize: src={{ source }}/sites dest={{ target }}

- name: Fix database in settings.php
  lineinfile:
    dest: "{{ target }}/sites/default/settings.php"
    regexp: "database' => "
    line: "      'database' => '{{ target_version.stat.shortver }}',"
- name: Fix username in settings.php
  lineinfile:
    dest: "{{ target }}/sites/default/settings.php"
    regexp: "username' => "
    line: "      'username' => '{{ target_version.stat.shortver }}',"
- name: Fix password in settings.php
  lineinfile:
    dest: "{{ target }}/sites/default/settings.php"
    regexp: "password' => "
    line: "      'password' => '{{ target_version.stat.shortver }}',"

- name: Create new alias for new version
  # template: src=alias.drushrc.j2 dest={{ target }}/sites/all/drush/{{ target_version.stat.version }}.alias.drushrc.php
  ntdr_create_drushrc_alias.py:
    path: "{{ target }}"
    name: "{{ target_version.stat.version }}"
    dbver: "{{ target_version.stat.shortver }}"
    user: "{{ ansible_ssh_user }}"
    host: "{{ hostvars[inventory_hostname]['ansible_eth0']['ipv4']['address'] }}"

- name: Create db
  mysql_db: name={{ target_version.stat.shortver }} state=present login_user=root login_password={{ mysql_root_pw }}
  when: withdb is defined
  tags: db

- name: Create db user
  mysql_user: name={{ target_version.stat.shortver }} password={{ target_version.stat.shortver }} priv={{ target_version.stat.shortver }}.*:ALL state=present login_user=root login_password={{ mysql_root_pw }}
  when: withdb is defined
  tags: db

- name: Fetch aliases
  synchronize: src={{ target }}/sites/all/drush dest={{ source }}/sites/all mode=pull checksum=yes times=no

- name: Dump local DB
  shell: "drush -y -r {{ source }} --uri=default sql-dump --ordered-dump --structure-tables-key=common --result-file=/tmp/{{  source_version.stat.version }}.sql"
  when: withdb is defined
  delegate_to: 127.0.0.1

- name: Upload SQL
  copy: src=/tmp/{{  source_version.stat.version }}.sql dest=/tmp/{{  source_version.stat.version }}.sql
  when: withdb is defined

- name: Import DB
  mysql_db:
    state: import
    name: "{{ target_version.stat.shortver }}"
    login_user: "{{ target_version.stat.shortver }}"
    login_password: "{{ target_version.stat.shortver }}"
    target: /tmp/{{ source_version.stat.version }}.sql
  when: withdb is defined

- name: Run up and updb
  shell: drush --verbose -y -r {{ target }} --uri=default chdir={{ target }} up
  shell: drush --verbose -y -r {{ target }} --uri=default chdir={{ target }} updb
