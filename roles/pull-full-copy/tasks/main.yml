---
# local = the local drupal root
# source = the remote drupal root

- stat: path={{ local }}/sites/default/settings.php
  delegate_to: 127.0.0.1
  register: local_settings
  tags: local_permissions, alias

- stat: path={{ local }}
  delegate_to: 127.0.0.1
  register: local_site
  tags: files

- ntdr_get_version.py: path={{ source }}
  register: source_version
  tags: always

- stat: path={{ source }}/sites/all/drush/{{ source_version.stat.version }}.alias.drushrc.php
  register: remote_alias
  tags: always

- name: Fix permissions on source
  shell: sudo ntdrchown {{ source }}
  tags: pre-permissions, freshen

- name: If local exists fix permissions on local
  shell: sudo ntdrchown -a {{ local }}
  delegate_to: 127.0.0.1
  when: local_settings.stat.exists
  tags: pre-permissions, freshen

- name: Fetch fresh drupal
  shell: drush dl --destination={{ local | dirname }} --drupal-project-rename={{ local | basename }}
  delegate_to: 127.0.0.1
  when: not local_site.stat.exists
  tags: files

- name: Create alias file
  ntdr_create_drushrc_alias.py: "{{ source }}"
  when: not remote_alias.stat.exists
  tags: alias

- name: Create sites/all/drush
  file: path={{ local }}/sites/all/drush state=directory mode=0755
  delegate_to: 127.0.0.1

- name: Fetch alias to local site
  fetch: src={{ source }}/sites/all/drush/{{ source_version.stat.version }}.alias.drushrc.php dest={{ local }}/sites/all/drush/ flat=yes
  when: local_settings.stat.exists
  tags: alias

- name: Fetch alias to ~/.drush
  fetch: src={{ source }}/sites/all/drush/{{ source_version.stat.version }}.alias.drushrc.php dest=~/.drush/ flat=yes
  when: not local_settings.stat.exists
  tags: alias

- name: Full fs sync from source to local
  shell: drush -y -r {{ local }} rsync @{{ source_version.stat.version }} @self --include-conf --include-vcs --progress --mode=a
  delegate_to: 127.0.0.1
  tags: files

- ntdr_get_db_details.py: path={{ local }}/sites/all/drush/{{ source_version.stat.version }}.alias.drushrc.php
  delegate_to: 127.0.0.1
  register: local_alias

#####
# Python seems to refuse to allow dots in DB names.  I'd really like to use the ansible scripts but WTF
#####
#- name: Create DB
#  mysql_db: name={{ local_alias.stat.dbname }} state=present login_user=root login_password={{ mysql_root_pw }}
#  delegate_to: 127.0.0.1
#- name: Create User
#  mysql_user: name={{ local_alias.stat.dbuser }} password={{ local_alias.stat.dbpass }} priv={{ local_alias.stat.dbname }}.*:ALL state=present login_user=root login_password={{ mysql_root_pw }}
#  delegate_to: 127.0.0.1

- name: Drop local DB and user
  shell: mysql-dropuser-and-db -u {{ local_alias.stat.dbuser }} -m {{ mysql_root_pw }}
  delegate_to: 127.0.0.1
  tags: db

- name: Create DB and user
  shell: mysql-create-user-and-db -u {{ local_alias.stat.dbuser }} -p {{ local_alias.stat.dbpass }} -n {{ local_alias.stat.dbname }} -m {{ mysql_root_pw }}
  delegate_to: 127.0.0.1
  tags: db

- name: Database sync from source to local
  shell: drush --verbose -y sql-sync --uri=default @{{ source_version.stat.version }} @self chdir={{ local }}
  delegate_to: 127.0.0.1
  tags: db-sync, freshen

- name: Set robots.txt to no follow
  copy: src=robots.nofollow.conf dest={{ local }}/.htaccess mode=0775 backup=yes
  when: devsite is defined
  delegate_to: 127.0.0.1
  tags: post-pull, robots

- name: Re-fix permissions on local
  shell: sudo ntdrchown {{ local }}
  delegate_to: 127.0.0.1
  when: local_settings.stat.exists
  tags: post-pull
