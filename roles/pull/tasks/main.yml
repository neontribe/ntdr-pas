---
# local = the local drupal root
# source = the remote drupal root

# Gather details
- name: Install required packages
  apt: pkg={{ item }} state=latest
  become: yes
  with_items: [python-git]
  tags: always

- stat: path={{ local }}/sites/default/settings.php
  delegate_to: 127.0.0.1
  register: local_settings
  tags: always

- stat: path={{ local }}
  delegate_to: 127.0.0.1
  register: local_site
  tags: always

- name: Get local DB details
  ntdr_get_db_details.py: path={{ local }}/sites/default/settings.php autofix=true
  delegate_to: 127.0.0.1
  when: local_settings.stat.exists
  register: local_db
  tags:
    - db
    - fullsync

- ntdr_get_version.py: path={{ source }}
  register: source_version
  tags: always

# Fix permissions

#- name: Fix permissions on source
#  shell: sudo ntdrchown {{ source }}
#  tags: always

- name: If local exists fix permissions on local
  shell: sudo ntdrchown -a {{ local }}
  delegate_to: 127.0.0.1
  when: local_settings.stat.exists
  tags:
    - filesync
    - fullsync

# File sync

- name: Fetch fresh drupal
  shell: drush dl drupal-7.x --destination={{ local | dirname }} --drupal-project-rename={{ local | basename }}
  delegate_to: 127.0.0.1
  when: not local_site.stat.exists
  tags: fullsync

- name: Full fs sync from source to local
  synchronize:
    mode: pull
    src:  "{{ source }}/*"
    dest: "{{ local }}"
    rsync_opts:
      - "--exclude=sites/all"
  tags: fullsync

- name: Files folder sync from source to local
  synchronize:
    mode: pull
    src:  "{{ source }}/sites/default/files"
    dest: "{{ local }}/sites/default"
    rsync_opts:
      - "--no-motd"
      - "--size-only"
      - "--exclude={{ source }}/sites/default/files/tabs-imagecache"
      - "--exclude={{ source }}/sites/default/files/styles"
      - "--exclude={{ source }}/sites/default/files/js"
      - "--exclude={{ source }}/sites/default/files/css"
  tags: filesync

# Sync DB

- name: Dump DB on remote
  shell: drush --verbose -y sql-dump --uri=default -r {{ source }} --ordered-dump --result-file=/tmp/{{ source_version.stat.latest.version }}.sql --structure-tables-key=common
  tags:
    - db
    - fullsync

- name: Copy sql down
  fetch:
    src: /tmp/{{ source_version.stat.latest.version }}.sql
    dest: /tmp/{{ source_version.stat.latest.version }}.sql
    flat: yes
  tags:
    - db
    - fullsync

- name: Create settings.php if local settings does not exists and db IS NOT set
  template: src=settings.php.tpl dest={{ local }}/sites/default/settings.php
  delegate_to: 127.0.0.1
  when: (not local_settings.stat.exists) and db is undefined
  tags:
    - db
    - fullsync

- name: Create settings.php if local settings does not exists and db IS set {{ db }}
  template: src=settings_force_db.php.tpl dest={{ local }}/sites/default/settings.php
  delegate_to: 127.0.0.1
  when: (not local_settings.stat.exists) and db is defined
  tags:
    - db
    - fullsync

- name: Get local DB details
  ntdr_get_db_details.py: path={{ local }}/sites/default/settings.php autofix=true
  delegate_to: 127.0.0.1
  register: local_db
  tags:
    - db
    - fullsync

- name: Create db using existing local settings file
  mysql_db:
    name: "{{ local_db.stat.dbname }}"
    state: present
    login_user: root
    login_password: "{{ mysql_root_pw }}"
  delegate_to: 127.0.0.1
  tags:
    - db
    - fullsync

- name: Create db user using existing local settings file
  mysql_user:
    name: "{{ local_db.stat.dbuser }}"
    password: "{{ local_db.stat.dbpass }}"
    priv: "{{ local_db.stat.dbname }}.*:ALL"
    state: present
    login_user: root
    login_password: "{{ mysql_root_pw }}"
  delegate_to: 127.0.0.1
  tags:
    - db
    - fullsync

- name: Import DB
  shell: drush -r {{ local }} sqlc < /tmp/{{ source_version.stat.latest.version }}.sql
  delegate_to: 127.0.0.1
  tags:
    - db
    - fullsync

- name: Clean up remote SQL
  shell: rm /tmp/{{ source_version.stat.latest.version }}.sql
  tags:
    - db
    - fullsync

- name: Clean up local SQL
  delegate_to: 127.0.0.1
  shell: rm /tmp/{{ source_version.stat.latest.version }}.sql
  tags:
    - db
    - fullsync

- name: Set robots.txt to no follow
  copy: src=robots.nofollow.conf dest={{ local }}/robots.txt mode=0775 backup=yes
  when: devsite is defined
  delegate_to: 127.0.0.1
  tags: always

- name: Re-fix permissions on local
  shell: sudo ntdrchown {{ local }}
  delegate_to: 127.0.0.1
  tags: always

- name: Checkout branches
  checkout_branches: path={{ local }} tag={{ branch }}
  delegate_to: 127.0.0.1
  when: branch is defined
  register: branches
  tags: always

- debug: var=branches
  tags: always

- name: Run drush updb
  shell: drush -r {{ local }} updb -y
  delegate_to: 127.0.0.1
  tags: always
